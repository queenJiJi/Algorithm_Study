# x가 5로 나누어 떨어지면, 5로 나눔
# x가 3으로 나누어 떨어지면, 3으로 나눔
# x가 2로 나누어 떨어지면, 2로 나눔
# x-1

# X가 주어졌을 때, 연산 4개를 적절히 사용해서 값을 1로 만들고자 함,
# 연산을 사용하는 최솟값?
x = int(input())

d = [0] * 30000  # 문제에서 3만값이 들어올 수 있다고 했기 때문
# 다이나믹 프로그래밍 진행(보텀업)
for i in range(2, x+1):
    # 현재 수 에서 1을 빼는 경우
    d[i] = d[i-1] + 1  # 뒤에 1을 더해주는 이유는 함수의 호출 횟수를 구해야하기 때문

    if i % 2 == 0:  # 현재의 수가 2로 나누어 떨어지는 경우
        d[i] = min(d[i], d[i//2]+1)  # 뒤에 1을 더해주는 이유는 함수의 호출 횟수를 구해야하기 때문
    if i % 3 == 0:  # 현재의 수가 3으로 나누어 떨어지는 경우
        d[i] = min(d[i], d[i//3]+1)  # 뒤에 1을 더해주는 이유는 함수의 호출 횟수를 구해야하기 때문
    if i % 5 == 0:  # 현재의 수가 5로 나누어 떨어지는 경우
        d[i] = min(d[i], d[i//5]+1)  # 뒤에 1을 더해주는 이유는 함수의 호출 횟수를 구해야하기 때문
print(d[x])
